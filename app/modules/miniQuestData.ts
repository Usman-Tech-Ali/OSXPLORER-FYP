export const miniQuestData = {
  "cpu-scheduling": {
    "fcfs": {
      title: "FCFS Mini-Quest",
      description: "Test your understanding of First-Come, First-Served scheduling.",
      concepts: ["FCFS basics", "Process order", "Waiting time"],
      difficulty: "Beginner",
      estimatedTime: 10,
      totalQuestions: 6,
      passingScore: 60,
      rewards: {
        xp: 100,
        badges: ["FCFS Novice"],
        achievements: ["First FCFS Clear"],
      },
      prerequisites: ["Basic OS Concepts"],
      tips: [
        "Remember: jobs are handled in arrival order.",
        "Calculate waiting time for each process.",
      ],
    },
    "sjf": {
      title: "SJF Mini-Quest",
      description: "Challenge your knowledge of Shortest Job First scheduling.",
      concepts: ["SJF basics", "Shortest job selection", "Starvation"],
      difficulty: "Intermediate",
      estimatedTime: 12,
      totalQuestions: 8,
      passingScore: 70,
      rewards: {
        xp: 120,
        badges: ["SJF Solver"],
        achievements: ["SJF Mastery"],
      },
      prerequisites: ["FCFS"],
      tips: [
        "Always pick the shortest job available.",
        "Watch out for starvation of long jobs.",
      ],
    },
    "srtf": {
      title: "SRTF Mini-Quest",
      description: "Test your understanding of Shortest Remaining Time First scheduling.",
      concepts: ["SRTF basics", "Remaining time calculation", "Priority inversion"],
      difficulty: "Advanced",
      estimatedTime: 15,
      totalQuestions: 10,
      passingScore: 75,
      rewards: {
        xp: 150,
        badges: ["SRTF Master"],
        achievements: ["SRTF Expert"],
      },
      prerequisites: ["SJF"],
      tips: [
        "Continuously evaluate the remaining time of processes.",
        "Ensure that shorter jobs preempt longer ones effectively.",
      ],
    },
    "priority": {
      title: "Priority Mini-Quest",
      description: "Test your understanding of Priority scheduling.",
      concepts: ["Priority basics", "Priority scheduling", "Starvation"],
      difficulty: "Intermediate",
      estimatedTime: 14,
      totalQuestions: 10,
      passingScore: 80,
      rewards: {
        xp: 140,
        badges: ["Priority Solver"],
        achievements: ["Priority Mastery"],
      },
      prerequisites: ["SJF"],
      tips: [
        "Prioritize jobs based on their priority.",
        "Watch out for starvation of high-priority jobs.",
      ],
    },
    "round-robin": {
      title: "Round Robin Mini-Quest",
      description: "Master the Round Robin scheduling algorithm.",
      concepts: ["Round Robin basics", "Time quantum", "Context switching"],
      difficulty: "Intermediate",
      estimatedTime: 15,
      totalQuestions: 9,
      passingScore: 75,
      rewards: {
        xp: 130,
        badges: ["Round Robin Novice"],
        achievements: ["Round Robin Success"],
      },
      prerequisites: ["Priority"],
      tips: [
        "Use a time quantum to switch between processes.",
        "Ensure fairness in process execution.",
      ],
    },
  },
  "memory-management": {
    "first-fit": {
      title: "First Fit Mini-Quest",
      description: "Test your skills in First Fit memory allocation.",
      concepts: ["First Fit basics", "Fragmentation"],
      difficulty: "Beginner",
      estimatedTime: 10,
      totalQuestions: 7,
      passingScore: 65,
      rewards: {
        xp: 110,
        badges: ["First Fit Beginner"],
        achievements: ["First Fit Success"],
      },
      prerequisites: ["Memory Basics"],
      tips: [
        "Allocate to the first available hole.",
        "Track fragmentation after each allocation.",
      ],
    },
    "best-fit": {
      title: "Best Fit Mini-Quest",
      description: "Challenge your understanding of Best Fit memory allocation.",
      concepts: ["Best Fit basics", "Memory utilization"],
      difficulty: "Intermediate",
      estimatedTime: 12,
      totalQuestions: 8,
      passingScore: 70,
      rewards: {
        xp: 120,
        badges: ["Best Fit Solver"],
        achievements: ["Best Fit Mastery"],
      },
      prerequisites: ["First Fit"],
      tips: [
        "Allocate to the smallest hole that fits the request.",
        "Minimize wasted space in memory.",
      ],
    },
    "worst-fit": {
      title: "Worst Fit Mini-Quest",
      description: "Test your knowledge of Worst Fit memory allocation.",
      concepts: ["Worst Fit basics", "Memory fragmentation"],
      difficulty: "Intermediate",
      estimatedTime: 12,
      totalQuestions: 8,
      passingScore: 70,
      rewards: {
        xp: 120,
        badges: ["Worst Fit Solver"],
        achievements: ["Worst Fit Mastery"],
      },
      prerequisites: ["Best Fit"],
      tips: [
        "Allocate to the largest available hole.",
        "Aim to reduce fragmentation over time.",
      ],
    },
    "paging": {
      title: "Paging Mini-Quest",
      description: "Master the concepts of paging in memory management.",
      concepts: ["Paging basics", "Page table", "Page faults"],
      difficulty: "Advanced",
      estimatedTime: 15,
      totalQuestions: 10,
      passingScore: 75,
      rewards: {
        xp: 150,
        badges: ["Paging Expert"],
        achievements: ["Paging Mastery"],
      },
      prerequisites: ["Best Fit", "Worst Fit"],
      tips: [
        "Understand how pages are mapped to frames.",
        "Handle page faults effectively.",
      ],
    },
    "segmentation": {
      title: "Segmentation Mini-Quest",
      description: "Test your understanding of segmentation in memory management.",
      concepts: ["Segmentation basics", "Segment table", "Segmentation faults"],
      difficulty: "Advanced",
      estimatedTime: 15,
      totalQuestions: 10,
      passingScore: 75,
      rewards: {
        xp: 150,
        badges: ["Segmentation Expert"],
        achievements: ["Segmentation Mastery"],
      },
      prerequisites: ["Paging"],
      tips: [
        "Understand how segments differ from pages.",
        "Manage segment tables effectively.",
      ],
    },
    "fragmentation": {
      title: "Fragmentation Mini-Quest",
      description: "Explore the challenges of fragmentation in memory management.",
      concepts: ["Fragmentation types", "Internal vs External fragmentation"],
      difficulty: "Advanced",
      estimatedTime: 15,
      totalQuestions: 10,
      passingScore: 75,
      rewards: {
        xp: 150,
        badges: ["Fragmentation Expert"],
        achievements: ["Fragmentation Mastery"],
      },
      prerequisites: ["Segmentation"],
      tips: [
        "Differentiate between internal and external fragmentation.",
        "Learn strategies to minimize fragmentation.",
      ],
    },
  },
  "process-synchronization": {
    "critical-section": {
      title: "Critical Section Mini-Quest",
      description: "Master the basics of critical section problems.",
      concepts: ["Critical section", "Mutual exclusion"],
      difficulty: "Beginner",
      estimatedTime: 10,
      totalQuestions: 6,
      passingScore: 60,
      rewards: {
        xp: 100,
        badges: ["Critical Section Novice"],
        achievements: ["First Critical Section Clear"],
      },
      prerequisites: ["Process Basics"],
      tips: [
        "Ensure only one process in the critical section at a time.",
        "Avoid race conditions.",
      ],
    },

    "critical-section-solutions": {
      title: "Critical Section Solutions Mini-Quest",
      description: "Test your knowledge of solutions to critical section problems.",
      concepts: ["Mutex", "Semaphores", "Monitors"],
      difficulty: "Intermediate",
      estimatedTime: 12,
      totalQuestions: 8,
      passingScore: 70,
      rewards: {
        xp: 120,
        badges: ["Critical Section Solver"],
        achievements: ["Critical Section Mastery"],
      },
      prerequisites: ["Critical Section"],
      tips: [
        "Understand the differences between mutex, semaphore, and monitor.",
        "Choose the appropriate synchronization mechanism for your problem.",
      ],
    },
    
    "mutex": {
      title: "Mutex Mini-Quest",
      description: "Explore the use of mutexes in process synchronization.",
      concepts: ["Mutex basics", "Locking mechanisms", "Deadlocks"],
      difficulty: "Intermediate",
      estimatedTime: 12,
      totalQuestions: 8,
      passingScore: 70,
      rewards: {
        xp: 120,
        badges: ["Mutex Solver"],
        achievements: ["Mutex Mastery"],
      },
      prerequisites: ["Critical Section Solutions"],
      tips: [
        "Understand the concept of a mutex.",
        "Implement mutexes to avoid deadlocks.",
      ],
    },
    "binary-semaphore": {
      title: "Binary Semaphore Mini-Quest",
      description: "Test your understanding of binary semaphores in synchronization.",
      concepts: ["Binary semaphore basics", "Synchronization", "Deadlocks"],
      difficulty: "Intermediate",
      estimatedTime: 12,
      totalQuestions: 8,
      passingScore: 70,
      rewards: {
        xp: 120,
        badges: ["Binary Semaphore Solver"],
        achievements: ["Binary Semaphore Mastery"],
      },
      prerequisites: ["Critical Section Solutions"],
      tips: [
        "Understand the concept of a binary semaphore.",
        "Implement binary semaphores to synchronize processes.",
      ],
    },
    "counting-semaphore": {
      title: "Counting Semaphore Mini-Quest",
      description: "Explore the use of counting semaphores in synchronization.",
      concepts: ["Counting semaphore basics", "Resource management", "Synchronization"],
      difficulty: "Intermediate",
      estimatedTime: 12,
      totalQuestions: 8,
      passingScore: 70,
      rewards: {
        xp: 120,
        badges: ["Counting Semaphore Solver"],
        achievements: ["Counting Semaphore Mastery"],
      },
      prerequisites: ["Critical Section Solutions"],
      tips: [
        "Understand the concept of a counting semaphore.",
        "Implement counting semaphores to manage resources.",
      ],
    },
    "producer-consumer": {
      title: "Producer-Consumer Mini-Quest",
      description: "Test your understanding of the Producer-Consumer problem.",
      concepts: ["Producer-Consumer basics", "Synchronization", "Buffer management"],
      difficulty: "Intermediate",
      estimatedTime: 12,
      totalQuestions: 8,
      passingScore: 70,
      rewards: {
        xp: 120,
        badges: ["Producer-Consumer Solver"],
        achievements: ["Producer-Consumer Mastery"],
      },
      prerequisites: ["Critical Section Solutions"],
      tips: [
        "Understand the Producer-Consumer problem and its challenges.",
        "Implement synchronization mechanisms to manage the buffer.",
      ],
    },

    "dining-philosophers": {
      title: "Dining Philosophers Mini-Quest",
      description: "Explore the Dining Philosophers problem in process synchronization.",
      concepts: ["Dining Philosophers basics", "Synchronization", "Deadlock"],
      difficulty: "Advanced",
      estimatedTime: 15,
      totalQuestions: 10,
      passingScore: 80,
      rewards: {
        xp: 150,
        badges: ["Dining Philosophers Solver"],
        achievements: ["Dining Philosophers Mastery"],
      },
      prerequisites: ["Producer-Consumer Solutions"],
      tips: [
        "Understand the Dining Philosophers problem and its challenges.",
        "Implement solutions to avoid deadlocks and ensure synchronization.",
      ],
      }
  },
} as const; 